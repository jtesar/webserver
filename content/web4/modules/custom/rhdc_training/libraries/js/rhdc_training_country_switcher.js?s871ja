(function ($, Drupal, drupalSettings, once) {
  Drupal.behaviors.rhdc_training_contry_switcher = {
    attach: function (context, settings) {
      once('rhdcTrainingCountrySwitcher', 'body', context).forEach(() => {
        const storageName = 'rhdc_training_country_switch';
        let course = drupalSettings.rhdc_training.course;
        let exceptions = drupalSettings.rhdc_training.exceptions;
        let regions = drupalSettings.rhdc_training.regions;
        let baseUrl = drupalSettings.rhdc_training.default_url;

        let url = baseUrl;
        let countrySelectedValue = '';

        let countryLocalStorage = window.localStorage.getItem(storageName);
        let countrySelect = $('select.rhdc-training-js-country-select');
        let ctaLink = $('div.rhdc-training-js-cta-link').find('a');
        let ctaComponent = $('div.rhdc-training-js-cta-link span.rh-cta--component');
        let countrySelectMessage = $('div.rhdc-training--aside--message');

        if (countryLocalStorage !== null && countryLocalStorage !== '') {
          countrySelect.val(countryLocalStorage);
          countrySelectedValue = countryLocalStorage;
          countrySelectMessage.removeClass('visible');
          ctaComponent.attr('data-rh-cta-type', 'primary')
        }

        // Get the initial href value.
        url = buildUrl(baseUrl, countrySelectedValue, regions, course, exceptions);
        ctaLink.attr('href', url);

        // Handle the changing of the country select.
        countrySelect.on('change', function () {
          let newCountryValue = $(this).val();

          // Do nothing if the value hasn't changed.
          if (newCountryValue === countrySelectedValue) {
            return false;
          }

          if (newCountryValue === '') {
            countrySelectMessage.addClass('visible');
            ctaComponent.attr('data-rh-cta-type', 'disabled');
          } else if (newCountryValue !== null && newCountryValue !== '') {
            countrySelectMessage.removeClass('visible');
            ctaComponent.attr('data-rh-cta-type', 'primary')
          }

          countrySelectedValue = newCountryValue;
          window.localStorage.setItem(storageName, countrySelectedValue);
          url = buildUrl(baseUrl, countrySelectedValue, regions, course, exceptions);
          ctaLink.attr('href', url);
        });

        ctaLink.on('click', function () {
          if (countrySelectedValue === '' || countrySelectedValue === null) {
            return false;
          }
        });
      });
    }
  };

  /**
   * Build the url.
   *
   * @param {string|*} baseUrl
   *   The base url to use.
   * @param {string|*} countrySelectedValue
   *   The country selected value.
   * @param {any} regions
   *   An array of regions.
   * @param {string|*} course
   *   The course to get the information for.
   * @param {any} exceptions
   *   An array of url exceptions.
   *
   * @return {string|*}
   *   A string url.
   */
  let buildUrl = function (baseUrl, countrySelectedValue, regions, course, exceptions) {
    // If there is no selected value, return.
    if (countrySelectedValue === '') {
      return '#';
    }

    let url = baseUrl;
    let country = regions[countrySelectedValue];
    let countryException = exceptions[countrySelectedValue];

    // If there is an `all` exception, use it.
    if (exceptions['all'] !== undefined) {
      countryException = exceptions['all'];
    }

    // If there is an exception, then use that url.
    if (countryException !== undefined) {
      url = countryException.url;
    }

    if (country !== undefined && country !== '') {
      // The there is a country language set, then replace it if needed.
      if (country.in_lang !== '') {
        url = url.replaceAll('[IN_LANG]', country.in_lang);
      } else if (url.includes('&in_lang=[IN_LANG]')) {
        url = url.replaceAll('&in_lang=[IN_LANG]', '');
      }

      if (country.region !== '') {
        url = url.replaceAll('[REGION]', country.region);
      } else if (url.includes('&in_region=[REGION]')) {
        url = url.replaceAll('&in_region=[REGION]', '');
      }

      url = url.replaceAll('[COURSE]', course);
      url = url.replaceAll('[COURSE_TO_LOWER]', course.toLowerCase());
    } else {
      // When a new story is added to the taxonomy and is not confugured.
      url = url.replaceAll('&in_region=[REGION]', '');
      url = url.replaceAll('&in_lang=[IN_LANG]', '');
      url = url.replaceAll('&course=[COURSE]', '');
      url = url.replaceAll('&course=[COURSE_TO_LOWER]', '');
    }

    return url;
  };
}(jQuery, Drupal, drupalSettings, once));
